@include(top.htm)

@include(savedPopup.htm)

<div id="snapshotPopup" class="popup">
	<video id="snapshotVideo"></video>

	<div class="buttonbar">
		<div onclick="takeSnapshot();">Take Snapshot</div>
	</div>

	<canvas id="snapshotCanvas" style="display: none;"></canvas>

	<div id="snapshotButtons" class="buttonbar" style="display: none; margin-bottom: 1.5em;">
		<div onclick="snapshotOk();" class="oneoftwo">OK</div>
		<div onclick="snapshotCancel();" class="oneoftwo">Cancel</div>
	</div>
</div>

<div id="headline">Found Something</div>

<div id="contentcontainer">

	<div>Glad to hear that you have found something!</div>

	<div>Please tell me about what you have found.</div>

	<div>What have you found?</div>

	<textarea id="found-what" placeholder="E.g.:&#10;• A golden chain with some green stone attached to it; there is a picture of a duck or something with blueish eyes on the stone&#10;• A white phone (Android) with a Burning Man 2023 sticker"></textarea>

	<div>What category does it belong to?</div>

	<select id="found-cat">
		@include(categoryOptions.htm)
	</select>

	<div>Please take a picture of the found item:</div>

	<canvas id="found-picture" style="display: none;"></canvas>

	<img id="found-picture-loaded-from-server" style="display:none;" />

	<div class="buttonbar">
		<div onclick="openSnapshotPopup();">Take Photo with the Webcam of the Laptop</div>
	</div>

	<div>When have you found it?</div>

	<textarea id="found-when" placeholder="E.g.:&#10;• Yesterday at 23:52&#10;• Just after the big fire drill that happened before the official start of Nowhere"></textarea>

	<div>Where have you found it?</div>

	<textarea id="found-where" placeholder="E.g.:&#10;• Just in front of the Gate&#10;• Halfway between MoN and the Red Cross"></textarea>

	<div>What is your name?<br>
	(Just in case the person whose item you found wants to know who to thank. ^^)</div>

	<textarea id="found-who" placeholder="E.g.:&#10;• Jon Snow, Prince of Dragonstone&#10;• Hermione Jean Granger"></textarea>

	<div>Where is it now / who has it been given to?</div>

	<textarea id="found-curlocation" placeholder="E.g.:&#10;• Given to the girl with the dragons&#10;• Stored at NoInfo"></textarea>

	<div>
		<input type="checkbox" id="found-delivered" name="found-delivered">
		<label for="found-delivered">Has this item been delivered to its owner?</label>
	</div>

	<div class="buttonbar">
		<div onclick="saveFoundItem();">Save this Found Item</div>
	</div>

</div>


<script>

	// check if editing a specific item has been requested
	var pos = window.location.search.indexOf("?edit=");
	var editingMode = (pos > -1);
	var addedNewPicture = false;

	function openSnapshotPopup() {

		document.getElementById("snapshotPopup").style.display = "block";
		document.getElementById("overlay").style.display = "block";

		var wantedPermission = {"video": true};
		var onError = function(error) {
			console.log(error);
		};

		if (navigator.getUserMedia) {
			navigator.getUserMedia(wantedPermission, onWebcamStartup, onError);
		} else if (navigator.mozGetUserMedia) {
			navigator.mozGetUserMedia(wantedPermission, onWebcamStartup, onError);
		} else if (navigator.webkitGetUserMedia) {
			navigator.webkitGetUserMedia(wantedPermission, onWebcamStartup, onError);
		};
	}

	function onWebcamStartup(stream) {

		var video = document.getElementById("snapshotVideo");

		video.srcObject = stream;

		video.play();
	}

	function snapshotOk() {

		var originCanvas = document.getElementById("snapshotCanvas");
		var targetCanvas = document.getElementById("found-picture");

		targetCanvas.width = originCanvas.width;
		targetCanvas.height = originCanvas.height;

		var ctx = targetCanvas.getContext("2d");

		ctx.drawImage(
			originCanvas,
			0, 0,
			originCanvas.width, originCanvas.height
		);

		targetCanvas.style.display = "block";

		// if we were showing an old picture (because we are editing an entry that had a picture before),
		// hide it now, as there is a new one...
		document.getElementById("found-picture-loaded-from-server").style.display = "none";

		addedNewPicture = true;

		snapshotCancel();
	}

	function snapshotCancel() {

		var video = document.getElementById("snapshotVideo");

		video.pause();

		document.getElementById("snapshotPopup").style.display = "none";
		document.getElementById("overlay").style.display = "none";
	}

	function takeSnapshot() {

		var video = document.getElementById("snapshotVideo");
		var canvas = document.getElementById("snapshotCanvas");

		canvas.width = video.offsetWidth;
		canvas.height = video.offsetHeight;

		var ctx = canvas.getContext("2d");

		ctx.drawImage(
			video,
			0, 0,
			video.offsetWidth, video.offsetHeight
		);

		canvas.style.display = "inline";
		document.getElementById("snapshotButtons").style.display = "block";
	}

	function clearData() {
		document.getElementById("found-what").value = "";
		document.getElementById("found-cat").value = "others";
		document.getElementById("found-when").value = "";
		document.getElementById("found-where").value = "";
		document.getElementById("found-who").value = "";
		document.getElementById("found-curlocation").value = "";
		document.getElementById("found-delivered").checked = false;
	}

	function setValueSafely(id, value) {
		if (value) {
			document.getElementById(id).value = value;
		}
	}

	function initBasedOnEditItem() {

		clearData();

		setValueSafely("found-what", window.editItem.what);
		setValueSafely("found-cat", window.editItem.cat);
		setValueSafely("found-when", window.editItem.when);
		setValueSafely("found-where", window.editItem.where);
		setValueSafely("found-who", window.editItem.who);
		setValueSafely("found-curlocation", window.editItem.curlocation);
		if (window.editItem.delivered) {
			document.getElementById("found-delivered").checked = true;
		}

		// for item.picture, just show the picture, but do NOT transfer it again to the server
		// on every save as long as it is not being updated :)
		if (window.editItem.picture) {
			document.getElementById("found-picture-loaded-from-server").src = window.editItem.picture;
			document.getElementById("found-picture-loaded-from-server").style.display = "block";
		}
	}

	function saveFoundItem() {

		var request = new XMLHttpRequest();
		request.open("POST", "/saveFoundItem", false);
		request.setRequestHeader("Content-Type", "application/json");

		request.onreadystatechange = function() {
			if (request.readyState == 4 && request.status == 200) {
				// TODO :: check that actually success: true is sent from the server!
				showSaved();
			}
		}

		var data = {
			what: document.getElementById("found-what").value,
			cat: document.getElementById("found-cat").value,
			when: document.getElementById("found-when").value,
			where: document.getElementById("found-where").value,
			who: document.getElementById("found-who").value,
			curlocation: document.getElementById("found-curlocation").value,
			delivered: document.getElementById("found-delivered").checked,
		};

		if (editingMode) {
			data.editId = window.editItem.id;
		}

		if (addedNewPicture) {
			var foundPicture = document.getElementById("found-picture");
			// send as normal quality JPEG...
			data.picture = foundPicture.toDataURL("image/jpeg", 0.8);
		}

		request.send(JSON.stringify(data));
	}

	if (editingMode) {
		var request = new XMLHttpRequest();
		request.open("POST", "/items", false);
		request.setRequestHeader("Content-Type", "application/json");
		request.onreadystatechange = function() {
			if (request.readyState == 4 && request.status == 200) {

				var items = JSON.parse(request.responseText).foundItems;

				if (items.length > 0) {
					window.editItem = items[0];
					initBasedOnEditItem();
				}
			}
		}
		request.send("{\"id\": " + window.location.search.substr(pos + 6) + "}");
	}

</script>

@include(bottom.htm)
